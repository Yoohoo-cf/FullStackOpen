{"ast":null,"code":"var _jsxFileName = \"/Users/youyandefengfeng/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"statistics\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"good \", props.good]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"neural \", props.neutral]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"bad \", props.bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"all \", props.all]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"average \", props.average]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"positive \", props.positive]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  // caculate the total number of collected feedback\n  const all = good + neutral + bad;\n\n  // caculate the average score of the feedback\n  const average = (good - bad) / all;\n\n  //caculate the percentage of positive feedback\n  const positive = good / all;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setGood(good + 1);\n      },\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNeutral(neutral + 1);\n      },\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setBad(bad + 1);\n      },\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: all,\n      average: average,\n      positive: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Statistics","props","children","fileName","_jsxFileName","lineNumber","columnNumber","good","neutral","bad","all","average","positive","_c","App","_s","setGood","setNeutral","setBad","onClick","_c2","$RefreshReg$"],"sources":["/Users/youyandefengfeng/unicafe/src/App.js"],"sourcesContent":["import {useState} from \"react\"\n\nconst Statistics =(props) => (\n    <div>\n    <h1>statistics</h1>\n    <li>good {props.good}</li>\n    <li>neural {props.neutral}</li>\n    <li>bad {props.bad}</li>\n    <li>all {props.all}</li>\n    <li>average {props.average}</li>\n    <li>positive {props.positive}</li>\n  </div>\n  )\n\n\nconst App = () =>{\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  // caculate the total number of collected feedback\n  const all = good + neutral + bad\n\n  // caculate the average score of the feedback\n  const average = (good - bad) / all\n\n  //caculate the percentage of positive feedback\n  const positive = good / all\n\n  return(\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={()=>{setGood(good + 1)}}>good</button>\n      <button onClick={()=>{setNeutral(neutral + 1)}}>neutral</button>\n      <button onClick={()=>{setBad(bad + 1)}}>bad</button>\n      <Statistics good={good} neutral={neutral} bad={bad} all={all} average={average} positive={positive}/>\n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}