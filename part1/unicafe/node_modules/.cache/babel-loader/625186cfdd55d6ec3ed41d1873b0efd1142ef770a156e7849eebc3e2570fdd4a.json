{"ast":null,"code":"var _jsxFileName = \"/Users/youyandefengfeng/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setGood(good + 1);\n      },\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNeutral(neutral + 1);\n      },\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setBad(bad + 1);\n      },\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"neural \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"positive \", positive]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4gnNStmv2er021Bn8O2GURCE9pg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","average","setAverage","positive","setPositive","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/youyandefengfeng/unicafe/src/App.js"],"sourcesContent":["import {useState} from \"react\"\n\nconst App = () =>{\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  const [average, setAverage] = useState(0)\n  const[positive, setPositive] = useState(0)\n\n  return(\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={()=>{setGood(good + 1)}}>good</button>\n      <button onClick={()=>{setNeutral(neutral + 1)}}>neutral</button>\n      <button onClick={()=>{setBad(bad + 1)}}>bad</button>\n      <h1>statistics</h1>\n        <li>good {good}</li>\n        <li>neural {neutral}</li>\n        <li>bad {bad}</li>\n        <li>all {all}</li>\n        <li>average {average}</li>\n        <li>positive {positive}</li>\n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAK,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE1C,oBACEE,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAI;QAAChB,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;MAAA,CAAE;MAAAY,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvDnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAI;QAACd,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAAA,CAAE;MAAAU,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAChEnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAI;QAACZ,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;MAAA,CAAE;MAAAQ,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACpDnB,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBnB,OAAA;MAAAe,QAAA,GAAI,OAAK,EAACZ,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpBnB,OAAA;MAAAe,QAAA,GAAI,SAAO,EAACV,OAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzBnB,OAAA;MAAAe,QAAA,GAAI,MAAI,EAACR,GAAG;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAClBnB,OAAA;MAAAe,QAAA,GAAI,MAAI,EAACN,GAAG;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAClBnB,OAAA;MAAAe,QAAA,GAAI,UAAQ,EAACJ,OAAO;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC1BnB,OAAA;MAAAe,QAAA,GAAI,WAAS,EAACF,QAAQ;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAGV,CAAC;AAAAjB,EAAA,CAzBKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}